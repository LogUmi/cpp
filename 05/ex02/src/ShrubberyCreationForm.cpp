/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lgerard <lgerard@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/09/11 21:05:05 by lgerard           #+#    #+#             */
/*   Updated: 2025/09/12 17:05:22 by lgerard          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <string>
#include <iostream>
#include <ostream>
#include <fstream>
#include "AForm.hpp"
#include "ShrubberyCreationForm.hpp"
#include "Bureaucrat.hpp"

// ****************************************************************************
// Constructors and destructor
// ****************************************************************************
ShrubberyCreationForm::ShrubberyCreationForm ( void )
:	AForm( "ShrubberyCreationForm default", 145, 137 ),
	target( "Someone" )
{
	//std::cout << "ShrubberyCreationForm default constructor executed" <<std::endl;
	return ;
}

ShrubberyCreationForm::ShrubberyCreationForm ( const ShrubberyCreationForm & other )
:	AForm( other ),
	target(other.target)
{
	//std::cout << "ShrubberyCreationForm copy constructor executed" <<std::endl;
	return ;
}

ShrubberyCreationForm::ShrubberyCreationForm( std::string target )
:	AForm( "ShrubberyCreationForm", 145, 137 ),
	target( target )
{
	//std::cout << "ShrubberyCreationForm general constructor executed" <<std::endl;
	return ;
	
}

ShrubberyCreationForm::~ShrubberyCreationForm ( void )
{
		//std::cout << "ShrubberyCreationForm destructor executed" <<std::endl;
}

// ****************************************************************************
// overload of assignation operator
// ****************************************************************************

ShrubberyCreationForm & ShrubberyCreationForm::operator=(const ShrubberyCreationForm & other)
{
	if (this != &other)
	{
		AForm::operator=(other);
		this->target = other.target;
	}
	return (*this);
}

// ****************************************************************************
// member functions
// ****************************************************************************

void	ShrubberyCreationForm::execute( const Bureaucrat & executor ) const
{
	try
	{
		this->is_Executable(executor);
		std::string		filename = "./" + this->target + "_shrubbery";
		std::ofstream	ofs;
		ofs.open(filename, std::fstream::trunc);
		if (!ofs.is_open())
			throw FileIssueException();
		ofs << ".................................::-=-.......--:................................" << std::endl;
		ofs << "..............................:=***+++++-..--+**++-.::.........................." << std::endl;
		ofs << "..............................-######***+++#####****++:.:---:..................." << std::endl;
		ofs << ".............................=#%#%%%%##*+*++*%*+*#+*##+*#+*++=:................." << std::endl;
		ofs << ".....................:=++++++#%###%%#%%%##%+***+=+##+#%#%#%#*+=-................" << std::endl;
		ofs << ".....................:=*#*****########%%%%#**####%*#**##%#****=................." << std::endl;
		ofs << "..................:==+**####%%#****#%%%@%%%##*%%%%**+*+*#%#***#+-:---+=+*-......" << std::endl;
		ofs << "............-=:=+*####%##%%%%%%##****%%%%%%%%%###%#***#++##%#######*+#***-......" << std::endl;
		ofs << ".........-++*++####**#%%%#%%##%%%%#**##%%###+***#%%%##*=+++*#+*#%%##*###*++=...." << std::endl;
		ofs << "........=*==+*%%%%%%%%%%%%%%##%%%%%%%####%*+##+=+#%%%%%#######%%%%%#%%#%##+-...." << std::endl;
		ofs << "......+*****+##%%%%%%%%%%%%%%%%#%%%%#%%##%%####++**%%%###%##%%%%%%#*#%#####+=:.." << std::endl;
		ofs << "......=++*#####%%%%#%%%%%#++*###*+++#%%%%###%##*++++*%#%%%%%%%%%%#**##++*=+***:." << std::endl;
		ofs << ".....****#%%%%%%%%%%%%%####+++%%%%%#*#%%%%%%#%%%##*++**+#%%%%@%%%%%*++*++#****-." << std::endl;
		ofs << ".......:+**#%@@%%%@@@%###%###*%%#%%%%%%%%%%%%%%%###%%#*#**#%#%#%%%%%%##%%##+-..." << std::endl;
		ofs << "........:-**%%%##%%%%%%%%%%%###%#%%%#*%%%%%%%%%%%%*%%###++++**%%%@##%%%##%+:...." << std::endl;
		ofs << "....:+##%%##%%%%%%%%%##%%%@%%#%%%%%%%%@%%%%%%%%%%%#%%%%%%###*#*##%%#%%%=.-......" << std::endl;
		ofs << "....-*%%%###%%%%%%%%%%%%##%%%##%%%%%%@@%%%%#%%%%@%%@@@%%%####*+++##%#*++++......" << std::endl;
		ofs << "...-*##*##%%%%%%%%#*%%%%##%%%**#%##%%%%%%%%%%%@%##%%%#+#%%%%%%###%##%#**##*+=..." << std::endl;
		ofs << "...-##+*####%%%#####%##%%%%%%%*###%%+*%#*#%%##%%=:##-.=%%%%%%%%#*#%%%%%###***=.." << std::endl;
		ofs << "..=%%+*%%%%%%%%##*####*###*+=*%%%%%%###*#%%*+%%#+#%+-=***+##+#****##%%%%#%##*-.." << std::endl;
		ofs << "...-*%%%%%%%%%##*+=#%%%##+...+%%%%%%%..-%%%%%*+#%%%%###+:...::-=:=***+#%%%%##*-." << std::endl;
		ofs << "....-*+=####**#####-+#=:*%%%%#==*%%%%:.=%%%%%%%#*-++=-+##%###*-***:.=*#*##*+==-." << std::endl;
		ofs << ".....:+**#####**+---:.....=*=....-#%%#-*%%%#*=.........-=:...:***---**+*##++=..." << std::endl;
		ofs << ".....:==*####*=-..................=%%%%%###=.................-***+::-++*#***+-.." << std::endl;
		ofs << "....:+#***##+-:....................*%%%%*#-...................-=+-.:.-=##*#*=:.." << std::endl;
		ofs << "........=*##:.....................=#%%%#*+............................-*#++-...." << std::endl;
		ofs << "........:--:......................+%%%#+*-..............................:+-:...." << std::endl;
		ofs << ".................................-#%%%#+**......................................" << std::endl;
		ofs << "................................=%%%%%%####:...................................." << std::endl;
		ofs << "............................:=#%%%%%%%%%%%%%#*-................................." << std::endl;
		ofs << "...............:::::-=+*####%%%####%############*-----::::......................" << std::endl;
		ofs << "........:::-=***++++++++++++++++++++++++++++++++++++=+++++++++*+*+=---:::::....." << std::endl;
		ofs << "................................................................................" << std::endl;
		ofs.close();		
	}
	catch(const AForm::GradeTooLowException & e)
	{
		throw ;
	}
	catch(const AForm::FormNotSignedException & e)
	{
		throw ;
	}
	catch(const ShrubberyCreationForm::FileIssueException & e)
	{
		throw ;
	}
	return ;
}

// ****************************************************************************
// ****************************************************************************
// Exceptions
// ****************************************************************************
// ****************************************************************************

const char* ShrubberyCreationForm::FileIssueException::what( void ) const throw()
{
	return ("file issue occured");
}
